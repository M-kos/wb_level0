services:
  postgres:
    container_name: order_service_postgres
    image: postgres:17.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  migrations-up:
    image: kukymbr/goose-docker:latest
    volumes:
      - ./migrations:/migrations
    environment:
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR}
      GOOSE_TABLE: ${GOOSE_TABLE}
    command: "goose -dir /migrations up"
    depends_on:
      postgres:
        condition:
          service_healthy
  migrations-down:
    image: kukymbr/goose-docker:latest
    volumes:
      - ./migrations:/migrations
    environment:
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR}
      GOOSE_TABLE: ${GOOSE_TABLE}
    command: "goose -dir /migrations down"
    depends_on:
      postgres:
        condition:
          service_healthy
    profiles:
      - migrations-down

  order_service:
    container_name: order_service
    image: order:latest
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
    environment:
      PORT: ${SERVICE_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_NAME}
      DB_PORT: ${POSTGRES_PORT}
      DB_HOST: ${POSTGRES_HOST}

volumes:
  postgres_data:
